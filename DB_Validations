db.createCollection("finesse_nation_users", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: [ "emailId", "password", "school" ],
         properties: {
            emailId: {
               bsonType: "string",
               description: "Email ID is the unique key"
            },
            userName: {
               bsonType: "string",
               description: "Username deafults to Email ID, if not provided."
            },
            password: {
               bsonType: "string",
               description: "Password is mandatory."
            },
            school: {
               bsonType: "string",
               description: "School Name should be mentioned."
            },
            points: {
               bsonType: "int",
               minimum: 0,
               maximum: 10000,
               description: "must be an integer in [ 0, 10000 ] and is required"
            }
         }
      }
   }
})

db.Finesse_Nation_Users.insert( { emailId: "shilpar2@illinois.edu", password: "pass123", school: "UIUC" } )


db.createCollection("finesse_nation_comments", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: [ "eventId", "userId", "comment" ],
         properties: {
            eventId: {
               bsonType: "string",
               description: "Event ID must be associated to a comment."
            },
            userId: {
               bsonType: "string",
               description: "Username must be associated to a comment."
            },
            comment: {
               bsonType: "string",
               description: "Comment cannot be empty."
            }
         }
      }
   }
})

db.finesse_nation_comments.insert( { eventId: "HackIllinois", userId: "Shilpa426", comment: "Amazing offers." } )


db.createCollection ( "finesse_nation_events",
{
    validator:
    {
        $jsonSchema:
      {
        bsonType: "object",
        required: [ "emailId", "eventTitle", "school" ],
        properties:
        {
            _id: {},
            emailId: {
               bsonType: "string",
               description: "The creator of the event."
            },
            eventTitle: {
               bsonType: "string",
               description: "The title of the event(need not be unique)."
            },
            school: {
               bsonType: "string",
               description: "Event should be associated to a school."
            },
            description: {
               bsonType: "string",
               description: "Further details about the event."
            },
            location: {
               bsonType: "string",
               description: "Further details about the event."
            },
            isActive: {
               bsonType: "bool",
               description: "Whether the event is active."
            },
            image: {
               bsonType: "string", // binary Blob, or a base64-encoded string
               description: "Storing the image as a blob."
            },
            postedTime: {
               bsonType: "timestamp",
               description: "The event was created at this time."
            },
            duration: {
               bsonType: "long", // to be stored in milliseconds
               description: "How long will the event be active."
            },
            category: {
                enum: ["General", "Vegan"],
                description: "It's defaulted to General"
            }
        }
      }
    },
    validationAction: "warn"
})
